{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useGetCartQuery, useAddCartItemMutation, useChangeCartItemMutation } from '../redux/injected/injectedCart';\nimport { setToggleOpenAuth } from '../redux/slices/popupSlice';\nimport { useAppDispatch } from '../redux/store';\nimport { useErrorHandler } from './useErrorHandler';\nexport const useAddProduct = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const {\n    data = [],\n    error,\n    isError\n  } = useGetCartQuery();\n  const [addCartItem, addStatues] = useAddCartItemMutation();\n  const addErrorHandlerData = {\n    error: addStatues.error,\n    isError: addStatues.isError,\n    isClient: true,\n    errorMessage: 'Произошла ошибка при попытке добавления товара в корзину'\n  };\n  useErrorHandler({\n    ...addErrorHandlerData\n  });\n  const [changeCartItem, changeStatuses] = useChangeCartItemMutation();\n  const changeErrorHandlerData = {\n    error: changeStatuses.error,\n    isError: changeStatuses.isError,\n    isClient: true,\n    errorMessage: 'Произошла ошибка при попытке увеличения колличества товара'\n  };\n  useErrorHandler({\n    ...changeErrorHandlerData\n  });\n  const addProduct = async item => {\n    if (isError && 'status' in error) {\n      if (error) dispatch(setToggleOpenAuth(true));\n    } else {\n      if (data.find(obj => obj.fixId === item.fixId)) {\n        const existingCount = data.find(obj => obj.fixId === item.fixId);\n        item.count += existingCount.count;\n        item.id = +existingCount.id;\n        await changeCartItem(item);\n      } else {\n        await addCartItem(item);\n      }\n    }\n  };\n  return addProduct;\n};\n_s(useAddProduct, \"t/EQsby1GtNklwF9ND1KpZAj06M=\", false, function () {\n  return [useAppDispatch, useGetCartQuery, useAddCartItemMutation, useErrorHandler, useChangeCartItemMutation, useErrorHandler];\n});","map":{"version":3,"names":["useGetCartQuery","useAddCartItemMutation","useChangeCartItemMutation","setToggleOpenAuth","useAppDispatch","useErrorHandler","useAddProduct","dispatch","data","error","isError","addCartItem","addStatues","addErrorHandlerData","isClient","errorMessage","changeCartItem","changeStatuses","changeErrorHandlerData","addProduct","item","find","obj","fixId","existingCount","count","id"],"sources":["C:/Users/Marginal1/Desktop/react-stroyka/client/src/hooks/useAddProduct.ts"],"sourcesContent":["import { TransmittedData } from '../@types/models';\r\nimport { useGetCartQuery, useAddCartItemMutation, useChangeCartItemMutation } from '../redux/injected/injectedCart';\r\nimport { setToggleOpenAuth } from '../redux/slices/popupSlice';\r\nimport { useAppDispatch } from '../redux/store';\r\nimport { useErrorHandler } from './useErrorHandler';\r\n\r\nexport const useAddProduct = () => {\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    const { data = [], error, isError } = useGetCartQuery();\r\n\r\n    const [addCartItem, addStatues] = useAddCartItemMutation();\r\n\r\n    const addErrorHandlerData = {\r\n        error: addStatues.error,\r\n        isError: addStatues.isError,\r\n        isClient: true,\r\n        errorMessage: 'Произошла ошибка при попытке добавления товара в корзину',\r\n    }\r\n\r\n    useErrorHandler({ ...addErrorHandlerData })\r\n\r\n    const [changeCartItem, changeStatuses] = useChangeCartItemMutation();\r\n\r\n    const changeErrorHandlerData = {\r\n        error: changeStatuses.error,\r\n        isError: changeStatuses.isError,\r\n        isClient: true,\r\n        errorMessage: 'Произошла ошибка при попытке увеличения колличества товара',\r\n    }\r\n\r\n    useErrorHandler({ ...changeErrorHandlerData })\r\n\r\n    const addProduct = async (item: TransmittedData) => {\r\n        if (isError && 'status' in error) {\r\n            if (error)\r\n                dispatch(setToggleOpenAuth(true))\r\n        } else {\r\n            if (data.find((obj) => obj.fixId === item.fixId)) {\r\n                const existingCount = data.find((obj) => obj.fixId === item.fixId)\r\n                item.count += existingCount!.count\r\n                item.id = +existingCount!.id\r\n                await changeCartItem(item)\r\n            } else {\r\n                await addCartItem(item)\r\n            }\r\n        }\r\n    }\r\n\r\n    return addProduct\r\n}"],"mappings":";AACA,SAASA,eAAe,EAAEC,sBAAsB,EAAEC,yBAAyB,QAAQ,gCAAgC;AACnH,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,SAASC,eAAe,QAAQ,mBAAmB;AAEnD,OAAO,MAAMC,aAAa,GAAG,MAAM;EAAA;EAE/B,MAAMC,QAAQ,GAAGH,cAAc,EAAE;EAEjC,MAAM;IAAEI,IAAI,GAAG,EAAE;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGV,eAAe,EAAE;EAEvD,MAAM,CAACW,WAAW,EAAEC,UAAU,CAAC,GAAGX,sBAAsB,EAAE;EAE1D,MAAMY,mBAAmB,GAAG;IACxBJ,KAAK,EAAEG,UAAU,CAACH,KAAK;IACvBC,OAAO,EAAEE,UAAU,CAACF,OAAO;IAC3BI,QAAQ,EAAE,IAAI;IACdC,YAAY,EAAE;EAClB,CAAC;EAEDV,eAAe,CAAC;IAAE,GAAGQ;EAAoB,CAAC,CAAC;EAE3C,MAAM,CAACG,cAAc,EAAEC,cAAc,CAAC,GAAGf,yBAAyB,EAAE;EAEpE,MAAMgB,sBAAsB,GAAG;IAC3BT,KAAK,EAAEQ,cAAc,CAACR,KAAK;IAC3BC,OAAO,EAAEO,cAAc,CAACP,OAAO;IAC/BI,QAAQ,EAAE,IAAI;IACdC,YAAY,EAAE;EAClB,CAAC;EAEDV,eAAe,CAAC;IAAE,GAAGa;EAAuB,CAAC,CAAC;EAE9C,MAAMC,UAAU,GAAG,MAAOC,IAAqB,IAAK;IAChD,IAAIV,OAAO,IAAI,QAAQ,IAAID,KAAK,EAAE;MAC9B,IAAIA,KAAK,EACLF,QAAQ,CAACJ,iBAAiB,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC,MAAM;MACH,IAAIK,IAAI,CAACa,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,KAAK,KAAKH,IAAI,CAACG,KAAK,CAAC,EAAE;QAC9C,MAAMC,aAAa,GAAGhB,IAAI,CAACa,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,KAAK,KAAKH,IAAI,CAACG,KAAK,CAAC;QAClEH,IAAI,CAACK,KAAK,IAAID,aAAa,CAAEC,KAAK;QAClCL,IAAI,CAACM,EAAE,GAAG,CAACF,aAAa,CAAEE,EAAE;QAC5B,MAAMV,cAAc,CAACI,IAAI,CAAC;MAC9B,CAAC,MAAM;QACH,MAAMT,WAAW,CAACS,IAAI,CAAC;MAC3B;IACJ;EACJ,CAAC;EAED,OAAOD,UAAU;AACrB,CAAC;AAAA,GA7CYb,aAAa;EAAA,QAELF,cAAc,EAEOJ,eAAe,EAEnBC,sBAAsB,EASxDI,eAAe,EAE0BH,yBAAyB,EASlEG,eAAe;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}