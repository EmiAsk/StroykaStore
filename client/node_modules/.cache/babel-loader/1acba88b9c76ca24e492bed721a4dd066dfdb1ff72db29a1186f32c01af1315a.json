{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marginal1\\\\Desktop\\\\react-stroyka\\\\client\\\\src\\\\components\\\\Modals\\\\Modals.tsx\",\n  _s = $RefreshSig$();\nimport { memo, useEffect } from 'react';\nimport BurgerDropdown from '../BurgerDropdown/BurgerDropdown';\nimport ChangeLocateModal from '../ChangeLocateModal/ChangeLocateModal';\nimport LoginModal from '../LoginModal/LoginModal';\nimport Popup from '../Popup/Popup';\nimport ErrorPopup from '../ErrorPopup/ErrorPopup';\nimport { useSelector } from 'react-redux';\nimport { setToggleChengeLocate, setToggleOpenAuth } from '../../redux/slices/popupSlice';\nimport { toggleError } from '../../redux/slices/errorSlice';\nimport style from './Modals.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modals = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(() => {\n  _s();\n  const isOpenLocateModal = useSelector(state => state.popupSlice.isOpenChengeLocate);\n  const isOpenAuth = useSelector(state => state.popupSlice.isOpenAuth);\n  const isOpenBurger = useSelector(state => state.popupSlice.isOpenBurger);\n  const isErrorOpen = useSelector(state => state.errorSlice.data);\n  useEffect(() => {\n    if (isOpenLocateModal || isOpenAuth || isOpenBurger || isErrorOpen.isError) {\n      document.body.style.overflow = 'hidden';\n    } else if (!isOpenLocateModal && !isOpenAuth && !isOpenBurger && !isErrorOpen.isError) {\n      document.body.style.overflow = 'visible';\n    }\n  }, [isOpenLocateModal, isOpenAuth, isOpenBurger, isErrorOpen.isError]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style['modals'],\n    children: [/*#__PURE__*/_jsxDEV(Popup, {\n      close: setToggleChengeLocate,\n      isOpen: isOpenLocateModal,\n      children: /*#__PURE__*/_jsxDEV(ChangeLocateModal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      close: setToggleOpenAuth,\n      isOpen: isOpenAuth,\n      children: /*#__PURE__*/_jsxDEV(LoginModal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      close: toggleError,\n      isOpen: isErrorOpen.isError,\n      children: /*#__PURE__*/_jsxDEV(ErrorPopup, {\n        ...isErrorOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), isOpenBurger && /*#__PURE__*/_jsxDEV(BurgerDropdown, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}, \"1TH4wdKMHT84T28YyGeP9XZycNM=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector];\n})), \"1TH4wdKMHT84T28YyGeP9XZycNM=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector];\n});\n_c2 = Modals;\nexport default Modals;\nvar _c, _c2;\n$RefreshReg$(_c, \"Modals$memo\");\n$RefreshReg$(_c2, \"Modals\");","map":{"version":3,"names":["memo","useEffect","BurgerDropdown","ChangeLocateModal","LoginModal","Popup","ErrorPopup","useSelector","setToggleChengeLocate","setToggleOpenAuth","toggleError","style","Modals","isOpenLocateModal","state","popupSlice","isOpenChengeLocate","isOpenAuth","isOpenBurger","isErrorOpen","errorSlice","data","isError","document","body","overflow"],"sources":["C:/Users/Marginal1/Desktop/react-stroyka/client/src/components/Modals/Modals.tsx"],"sourcesContent":["import { FC, memo, useEffect } from 'react';\r\nimport BurgerDropdown from '../BurgerDropdown/BurgerDropdown';\r\nimport ChangeLocateModal from '../ChangeLocateModal/ChangeLocateModal';\r\nimport LoginModal from '../LoginModal/LoginModal';\r\nimport Popup from '../Popup/Popup';\r\nimport ErrorPopup from '../ErrorPopup/ErrorPopup';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/store';\r\nimport { setToggleChengeLocate, setToggleOpenAuth } from '../../redux/slices/popupSlice';\r\nimport { toggleError } from '../../redux/slices/errorSlice';\r\nimport style from './Modals.module.scss';\r\n\r\nconst Modals: FC = memo(() => {\r\n\r\n    const isOpenLocateModal = useSelector((state: RootState) => state.popupSlice.isOpenChengeLocate);\r\n    const isOpenAuth = useSelector((state: RootState) => state.popupSlice.isOpenAuth);\r\n    const isOpenBurger = useSelector((state: RootState) => state.popupSlice.isOpenBurger);\r\n    const isErrorOpen = useSelector((state: RootState) => state.errorSlice.data)\r\n\r\n    useEffect(() => {\r\n        if (isOpenLocateModal || isOpenAuth || isOpenBurger || isErrorOpen.isError) {\r\n            document.body.style.overflow = 'hidden';\r\n        } else if (!isOpenLocateModal && !isOpenAuth && !isOpenBurger && !isErrorOpen.isError) {\r\n            document.body.style.overflow = 'visible';\r\n        }\r\n    }, [isOpenLocateModal, isOpenAuth, isOpenBurger, isErrorOpen.isError]);\r\n\r\n    return (\r\n        <div className={style['modals']}>\r\n            <Popup close={setToggleChengeLocate} isOpen={isOpenLocateModal}>\r\n                <ChangeLocateModal />\r\n            </Popup>\r\n            <Popup close={setToggleOpenAuth} isOpen={isOpenAuth}>\r\n                <LoginModal />\r\n            </Popup>\r\n            <Popup close={toggleError} isOpen={isErrorOpen.isError}>\r\n                <ErrorPopup {...isErrorOpen} />\r\n            </Popup>\r\n            {isOpenBurger && <BurgerDropdown />}\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Modals;"],"mappings":";;AAAA,SAAaA,IAAI,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,OAAOC,iBAAiB,MAAM,wCAAwC;AACtE,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAASC,qBAAqB,EAAEC,iBAAiB,QAAQ,+BAA+B;AACxF,SAASC,WAAW,QAAQ,+BAA+B;AAC3D,OAAOC,KAAK,MAAM,sBAAsB;AAAC;AAEzC,MAAMC,MAAU,iCAAGZ,IAAI,SAAC,MAAM;EAAA;EAE1B,MAAMa,iBAAiB,GAAGN,WAAW,CAAEO,KAAgB,IAAKA,KAAK,CAACC,UAAU,CAACC,kBAAkB,CAAC;EAChG,MAAMC,UAAU,GAAGV,WAAW,CAAEO,KAAgB,IAAKA,KAAK,CAACC,UAAU,CAACE,UAAU,CAAC;EACjF,MAAMC,YAAY,GAAGX,WAAW,CAAEO,KAAgB,IAAKA,KAAK,CAACC,UAAU,CAACG,YAAY,CAAC;EACrF,MAAMC,WAAW,GAAGZ,WAAW,CAAEO,KAAgB,IAAKA,KAAK,CAACM,UAAU,CAACC,IAAI,CAAC;EAE5EpB,SAAS,CAAC,MAAM;IACZ,IAAIY,iBAAiB,IAAII,UAAU,IAAIC,YAAY,IAAIC,WAAW,CAACG,OAAO,EAAE;MACxEC,QAAQ,CAACC,IAAI,CAACb,KAAK,CAACc,QAAQ,GAAG,QAAQ;IAC3C,CAAC,MAAM,IAAI,CAACZ,iBAAiB,IAAI,CAACI,UAAU,IAAI,CAACC,YAAY,IAAI,CAACC,WAAW,CAACG,OAAO,EAAE;MACnFC,QAAQ,CAACC,IAAI,CAACb,KAAK,CAACc,QAAQ,GAAG,SAAS;IAC5C;EACJ,CAAC,EAAE,CAACZ,iBAAiB,EAAEI,UAAU,EAAEC,YAAY,EAAEC,WAAW,CAACG,OAAO,CAAC,CAAC;EAEtE,oBACI;IAAK,SAAS,EAAEX,KAAK,CAAC,QAAQ,CAAE;IAAA,wBAC5B,QAAC,KAAK;MAAC,KAAK,EAAEH,qBAAsB;MAAC,MAAM,EAAEK,iBAAkB;MAAA,uBAC3D,QAAC,iBAAiB;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACjB,eACR,QAAC,KAAK;MAAC,KAAK,EAAEJ,iBAAkB;MAAC,MAAM,EAAEQ,UAAW;MAAA,uBAChD,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACV,eACR,QAAC,KAAK;MAAC,KAAK,EAAEP,WAAY;MAAC,MAAM,EAAES,WAAW,CAACG,OAAQ;MAAA,uBACnD,QAAC,UAAU;QAAA,GAAKH;MAAW;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA,QAC3B,EACPD,YAAY,iBAAI,QAAC,cAAc;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACjC;AAEd,CAAC;EAAA,QA3B6BX,WAAW,EAClBA,WAAW,EACTA,WAAW,EACZA,WAAW;AAAA,GAwBjC;EAAA,QA3B4BA,WAAW,EAClBA,WAAW,EACTA,WAAW,EACZA,WAAW;AAAA,EAwBjC;AAAA,MA7BIK,MAAU;AA+BhB,eAAeA,MAAM;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}