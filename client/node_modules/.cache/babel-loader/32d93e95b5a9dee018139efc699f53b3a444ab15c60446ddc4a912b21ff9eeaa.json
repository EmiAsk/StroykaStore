{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useAddCartItemMutation, useChangeCartItemMutation, useLazyGetCartQuery } from '../redux/injected/injectedCart';\nimport { useErrorHandler } from './useErrorHandler';\nexport const useAddProduct = () => {\n  _s();\n  const [getCartItems, getStatuses] = useLazyGetCartQuery();\n  const getErrorHandlerData = {\n    error: getStatuses.error,\n    isError: getStatuses.isError,\n    isClient: f,\n    errorMessage: 'Произошла ошибка при попытке добавления товара в корзину'\n  };\n  useErrorHandler({\n    ...getErrorHandlerData\n  });\n  const [addCartItem, addStatues] = useAddCartItemMutation();\n  const addErrorHandlerData = {\n    error: addStatues.error,\n    isError: addStatues.isError,\n    isClient: true,\n    errorMessage: 'Произошла ошибка при попытке добавления товара в корзину'\n  };\n  useErrorHandler({\n    ...addErrorHandlerData\n  });\n  const [changeCartItem, changeStatuses] = useChangeCartItemMutation();\n  const changeErrorHandlerData = {\n    error: changeStatuses.error,\n    isError: changeStatuses.isError,\n    isClient: true,\n    errorMessage: 'Произошла ошибка при попытке увеличения колличества товара'\n  };\n  useErrorHandler({\n    ...changeErrorHandlerData\n  });\n  const addProduct = async item => {\n    await getCartItems();\n    if (getStatuses.data) {\n      console.log('lll');\n      if (getStatuses.data.find(obj => +obj.id === item.id)) {\n        const existingCount = getStatuses.data.find(obj => +obj.id === item.id);\n        item.count += existingCount.count;\n        item.id = +existingCount.id;\n        await changeCartItem(item);\n      } else {\n        await addCartItem(item);\n      }\n    }\n  };\n  return addProduct;\n};\n_s(useAddProduct, \"fyMACMgT+W9T8IjAx7rDwz4pwK0=\", false, function () {\n  return [useLazyGetCartQuery, useErrorHandler, useAddCartItemMutation, useErrorHandler, useChangeCartItemMutation, useErrorHandler];\n});","map":{"version":3,"names":["useAddCartItemMutation","useChangeCartItemMutation","useLazyGetCartQuery","useErrorHandler","useAddProduct","getCartItems","getStatuses","getErrorHandlerData","error","isError","isClient","f","errorMessage","addCartItem","addStatues","addErrorHandlerData","changeCartItem","changeStatuses","changeErrorHandlerData","addProduct","item","data","console","log","find","obj","id","existingCount","count"],"sources":["C:/Users/Marginal1/Desktop/react-stroyka/client/src/hooks/useAddProduct.ts"],"sourcesContent":["import { useSelector } from 'react-redux';\r\nimport { TransmittedData } from '../@types/models';\r\nimport { useGetCartQuery, useAddCartItemMutation, useChangeCartItemMutation, useLazyGetCartQuery } from '../redux/injected/injectedCart';\r\n\r\nimport { RootState, useAppDispatch } from '../redux/store';\r\nimport { useErrorHandler } from './useErrorHandler';\r\n\r\nexport const useAddProduct = () => {\r\n\r\n    \r\n\r\n    const [getCartItems, getStatuses] = useLazyGetCartQuery();\r\n\r\n    const getErrorHandlerData = {\r\n        error: getStatuses.error,\r\n        isError: getStatuses.isError,\r\n        isClient: f,\r\n        errorMessage: 'Произошла ошибка при попытке добавления товара в корзину',\r\n    }\r\n\r\n    useErrorHandler({ ...getErrorHandlerData })\r\n\r\n    const [addCartItem, addStatues] = useAddCartItemMutation();\r\n\r\n    const addErrorHandlerData = {\r\n        error: addStatues.error,\r\n        isError: addStatues.isError,\r\n        isClient: true,\r\n        errorMessage: 'Произошла ошибка при попытке добавления товара в корзину',\r\n    }\r\n\r\n    useErrorHandler({ ...addErrorHandlerData })\r\n\r\n    const [changeCartItem, changeStatuses] = useChangeCartItemMutation();\r\n\r\n    const changeErrorHandlerData = {\r\n        error: changeStatuses.error,\r\n        isError: changeStatuses.isError,\r\n        isClient: true,\r\n        errorMessage: 'Произошла ошибка при попытке увеличения колличества товара',\r\n    }\r\n\r\n    useErrorHandler({ ...changeErrorHandlerData })\r\n\r\n    const addProduct = async (item: TransmittedData) => {\r\n\r\n        await getCartItems()\r\n\r\n        if (getStatuses.data) {\r\n            console.log('lll')\r\n            if (getStatuses.data.find((obj) => +obj.id === item.id)) {\r\n                const existingCount = getStatuses.data.find((obj) => +obj.id === item.id)\r\n                item.count += existingCount!.count\r\n                item.id = +existingCount!.id\r\n                await changeCartItem(item)\r\n            } else {\r\n                await addCartItem(item)\r\n            }\r\n        }\r\n    }\r\n\r\n    return addProduct\r\n}"],"mappings":";AAEA,SAA0BA,sBAAsB,EAAEC,yBAAyB,EAAEC,mBAAmB,QAAQ,gCAAgC;AAGxI,SAASC,eAAe,QAAQ,mBAAmB;AAEnD,OAAO,MAAMC,aAAa,GAAG,MAAM;EAAA;EAI/B,MAAM,CAACC,YAAY,EAAEC,WAAW,CAAC,GAAGJ,mBAAmB,EAAE;EAEzD,MAAMK,mBAAmB,GAAG;IACxBC,KAAK,EAAEF,WAAW,CAACE,KAAK;IACxBC,OAAO,EAAEH,WAAW,CAACG,OAAO;IAC5BC,QAAQ,EAAEC,CAAC;IACXC,YAAY,EAAE;EAClB,CAAC;EAEDT,eAAe,CAAC;IAAE,GAAGI;EAAoB,CAAC,CAAC;EAE3C,MAAM,CAACM,WAAW,EAAEC,UAAU,CAAC,GAAGd,sBAAsB,EAAE;EAE1D,MAAMe,mBAAmB,GAAG;IACxBP,KAAK,EAAEM,UAAU,CAACN,KAAK;IACvBC,OAAO,EAAEK,UAAU,CAACL,OAAO;IAC3BC,QAAQ,EAAE,IAAI;IACdE,YAAY,EAAE;EAClB,CAAC;EAEDT,eAAe,CAAC;IAAE,GAAGY;EAAoB,CAAC,CAAC;EAE3C,MAAM,CAACC,cAAc,EAAEC,cAAc,CAAC,GAAGhB,yBAAyB,EAAE;EAEpE,MAAMiB,sBAAsB,GAAG;IAC3BV,KAAK,EAAES,cAAc,CAACT,KAAK;IAC3BC,OAAO,EAAEQ,cAAc,CAACR,OAAO;IAC/BC,QAAQ,EAAE,IAAI;IACdE,YAAY,EAAE;EAClB,CAAC;EAEDT,eAAe,CAAC;IAAE,GAAGe;EAAuB,CAAC,CAAC;EAE9C,MAAMC,UAAU,GAAG,MAAOC,IAAqB,IAAK;IAEhD,MAAMf,YAAY,EAAE;IAEpB,IAAIC,WAAW,CAACe,IAAI,EAAE;MAClBC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;MAClB,IAAIjB,WAAW,CAACe,IAAI,CAACG,IAAI,CAAEC,GAAG,IAAK,CAACA,GAAG,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,CAAC,EAAE;QACrD,MAAMC,aAAa,GAAGrB,WAAW,CAACe,IAAI,CAACG,IAAI,CAAEC,GAAG,IAAK,CAACA,GAAG,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,CAAC;QACzEN,IAAI,CAACQ,KAAK,IAAID,aAAa,CAAEC,KAAK;QAClCR,IAAI,CAACM,EAAE,GAAG,CAACC,aAAa,CAAED,EAAE;QAC5B,MAAMV,cAAc,CAACI,IAAI,CAAC;MAC9B,CAAC,MAAM;QACH,MAAMP,WAAW,CAACO,IAAI,CAAC;MAC3B;IACJ;EACJ,CAAC;EAED,OAAOD,UAAU;AACrB,CAAC;AAAA,GAvDYf,aAAa;EAAA,QAIcF,mBAAmB,EASvDC,eAAe,EAEmBH,sBAAsB,EASxDG,eAAe,EAE0BF,yBAAyB,EASlEE,eAAe;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}