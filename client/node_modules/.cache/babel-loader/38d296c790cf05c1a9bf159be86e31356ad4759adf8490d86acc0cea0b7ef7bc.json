{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nexport const useSort = () => {\n  _s();\n  const [sortState, setSortState] = useState([{\n    value: true,\n    label: 'Популярные',\n    title: 'popular'\n  }, {\n    value: false,\n    label: 'Дешевле',\n    title: 'cheaper'\n  }, {\n    value: false,\n    label: 'Дороже',\n    title: 'expensive'\n  }, {\n    value: false,\n    label: 'По алфавиту',\n    title: 'alphabetically'\n  }]);\n  const onClickSortItem = str => {\n    const newArr = sortState.map(obj => {\n      if (obj.label === str) {\n        obj.value = true;\n        return obj;\n      } else {\n        obj.value = false;\n        return obj;\n      }\n    });\n    setSortState(newArr);\n  };\n  const getSortParam = () => {\n    sortState.find(obj => obj.value).title;\n  };\n  return {\n    sortState,\n    onClickSortItem\n  };\n};\n_s(useSort, \"7rL/M3PD31Blqo1+42xc7CYfd1w=\");","map":{"version":3,"names":["useState","useSort","sortState","setSortState","value","label","title","onClickSortItem","str","newArr","map","obj","getSortParam","find"],"sources":["C:/Users/Marginal1/Desktop/react-stroyka/client/src/hooks/useSort.ts"],"sourcesContent":["import { useState } from 'react';\r\n\r\nexport const useSort = () => {\r\n\r\n    const [sortState, setSortState] = useState([\r\n        {\r\n            value: true,\r\n            label: 'Популярные',\r\n            title: 'popular'\r\n        },\r\n        {\r\n            value: false,\r\n            label: 'Дешевле',\r\n            title: 'cheaper'\r\n        },\r\n        {\r\n            value: false,\r\n            label: 'Дороже',\r\n            title: 'expensive'\r\n        },\r\n        {\r\n            value: false,\r\n            label: 'По алфавиту',\r\n            title: 'alphabetically'\r\n        },\r\n    ]);\r\n\r\n    const onClickSortItem = (str: string) => {\r\n\r\n        const newArr = sortState.map((obj) => {\r\n            if (obj.label === str) {\r\n                obj.value = true\r\n                return obj\r\n            } else {\r\n                obj.value = false\r\n                return obj\r\n\r\n            }\r\n        })\r\n        setSortState(newArr)\r\n    }\r\n\r\n    const getSortParam = () => {\r\n        sortState.find((obj) => obj.value).title\r\n    }\r\n    return { sortState, onClickSortItem }\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;EAEzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGH,QAAQ,CAAC,CACvC;IACII,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,YAAY;IACnBC,KAAK,EAAE;EACX,CAAC,EACD;IACIF,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE,SAAS;IAChBC,KAAK,EAAE;EACX,CAAC,EACD;IACIF,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE,QAAQ;IACfC,KAAK,EAAE;EACX,CAAC,EACD;IACIF,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE,aAAa;IACpBC,KAAK,EAAE;EACX,CAAC,CACJ,CAAC;EAEF,MAAMC,eAAe,GAAIC,GAAW,IAAK;IAErC,MAAMC,MAAM,GAAGP,SAAS,CAACQ,GAAG,CAAEC,GAAG,IAAK;MAClC,IAAIA,GAAG,CAACN,KAAK,KAAKG,GAAG,EAAE;QACnBG,GAAG,CAACP,KAAK,GAAG,IAAI;QAChB,OAAOO,GAAG;MACd,CAAC,MAAM;QACHA,GAAG,CAACP,KAAK,GAAG,KAAK;QACjB,OAAOO,GAAG;MAEd;IACJ,CAAC,CAAC;IACFR,YAAY,CAACM,MAAM,CAAC;EACxB,CAAC;EAED,MAAMG,YAAY,GAAG,MAAM;IACvBV,SAAS,CAACW,IAAI,CAAEF,GAAG,IAAKA,GAAG,CAACP,KAAK,CAAC,CAACE,KAAK;EAC5C,CAAC;EACD,OAAO;IAAEJ,SAAS;IAAEK;EAAgB,CAAC;AACzC,CAAC;AAAA,GA5CYN,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}