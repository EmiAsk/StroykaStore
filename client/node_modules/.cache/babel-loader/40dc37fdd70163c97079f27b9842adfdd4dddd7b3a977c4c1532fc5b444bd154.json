{"ast":null,"code":"import { stroykaApi } from '../stroyka.api';\nconst injectedCart = stroykaApi.injectEndpoints({\n  endpoints: builder => ({\n    getCart: builder.query({\n      query: token => ({\n        url: 'cart',\n        prepareHeaders: token => {\n          token.set(\"auth-token\", token);\n          return token;\n        }\n      }),\n      providesTags: result => result ? [...result.map(_ref => {\n        let {\n          id\n        } = _ref;\n        return {\n          type: 'Cart',\n          id\n        };\n      }), 'Cart'] : ['Cart']\n    }),\n    addCartItem: builder.mutation({\n      query: _ref2 => {\n        let {\n          id,\n          ...data\n        } = _ref2;\n        return {\n          url: `cart`,\n          method: 'POST',\n          body: data\n        };\n      },\n      invalidatesTags: ['Cart']\n    }),\n    changeCartItem: builder.mutation({\n      query: _ref3 => {\n        let {\n          id,\n          ...data\n        } = _ref3;\n        return {\n          url: `cart/${id}`,\n          method: 'PUT',\n          body: data\n        };\n      },\n      invalidatesTags: ['Cart']\n    }),\n    deleteCartItem: builder.mutation({\n      query: id => ({\n        url: `cart/${id}`,\n        method: 'DELETE'\n      }),\n      invalidatesTags: ['Cart']\n    })\n  }),\n  overrideExisting: false\n});\nexport const {\n  useAddCartItemMutation,\n  useGetCartQuery,\n  useLazyGetCartQuery,\n  useChangeCartItemMutation,\n  useDeleteCartItemMutation\n} = injectedCart;","map":{"version":3,"names":["stroykaApi","injectedCart","injectEndpoints","endpoints","builder","getCart","query","token","url","prepareHeaders","set","providesTags","result","map","id","type","addCartItem","mutation","data","method","body","invalidatesTags","changeCartItem","deleteCartItem","overrideExisting","useAddCartItemMutation","useGetCartQuery","useLazyGetCartQuery","useChangeCartItemMutation","useDeleteCartItemMutation"],"sources":["C:/Users/Marginal1/Desktop/react-stroyka/client/src/redux/injected/injectedCart.ts"],"sourcesContent":["import { stroykaApi } from '../stroyka.api';\r\nimport { CartProductModel } from '../../@types/models';\r\n\r\nconst injectedCart = stroykaApi.injectEndpoints({\r\n    endpoints: (builder) => ({\r\n        getCart: builder.query<CartProductModel[], any | undefined>({\r\n            query: (token) => ({\r\n                url: 'cart',\r\n                prepareHeaders: (token) => {\r\n                        token.set(\"auth-token\", token);\r\n                    return token;\r\n                },\r\n            }),\r\n            providesTags: (result) =>\r\n                result\r\n                    ? [...result.map(({ id }) => ({ type: 'Cart' as const, id })), 'Cart']\r\n                    : ['Cart'],\r\n        }),\r\n        addCartItem: builder.mutation({\r\n            query: ({ id, ...data }) => ({\r\n                url: `cart`,\r\n                method: 'POST',\r\n                body: data,\r\n            }),\r\n            invalidatesTags: ['Cart'],\r\n        }),\r\n        changeCartItem: builder.mutation({\r\n            query: ({ id, ...data }) => ({\r\n                url: `cart/${id}`,\r\n                method: 'PUT',\r\n                body: data,\r\n            }),\r\n            invalidatesTags: ['Cart'],\r\n        }),\r\n        deleteCartItem: builder.mutation({\r\n            query: (id) => ({\r\n                url: `cart/${id}`,\r\n                method: 'DELETE',\r\n            }),\r\n            invalidatesTags: ['Cart'],\r\n        }),\r\n    }),\r\n    overrideExisting: false,\r\n})\r\n\r\nexport const {\r\n    useAddCartItemMutation,\r\n    useGetCartQuery,\r\n    useLazyGetCartQuery,\r\n    useChangeCartItemMutation,\r\n    useDeleteCartItemMutation\r\n} = injectedCart;"],"mappings":"AAAA,SAASA,UAAU,QAAQ,gBAAgB;AAG3C,MAAMC,YAAY,GAAGD,UAAU,CAACE,eAAe,CAAC;EAC5CC,SAAS,EAAGC,OAAO,KAAM;IACrBC,OAAO,EAAED,OAAO,CAACE,KAAK,CAAsC;MACxDA,KAAK,EAAGC,KAAK,KAAM;QACfC,GAAG,EAAE,MAAM;QACXC,cAAc,EAAGF,KAAK,IAAK;UACnBA,KAAK,CAACG,GAAG,CAAC,YAAY,EAAEH,KAAK,CAAC;UAClC,OAAOA,KAAK;QAChB;MACJ,CAAC,CAAC;MACFI,YAAY,EAAGC,MAAM,IACjBA,MAAM,GACA,CAAC,GAAGA,MAAM,CAACC,GAAG,CAAC;QAAA,IAAC;UAAEC;QAAG,CAAC;QAAA,OAAM;UAAEC,IAAI,EAAE,MAAe;UAAED;QAAG,CAAC;MAAA,CAAC,CAAC,EAAE,MAAM,CAAC,GACpE,CAAC,MAAM;IACrB,CAAC,CAAC;IACFE,WAAW,EAAEZ,OAAO,CAACa,QAAQ,CAAC;MAC1BX,KAAK,EAAE;QAAA,IAAC;UAAEQ,EAAE;UAAE,GAAGI;QAAK,CAAC;QAAA,OAAM;UACzBV,GAAG,EAAG,MAAK;UACXW,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEF;QACV,CAAC;MAAA,CAAC;MACFG,eAAe,EAAE,CAAC,MAAM;IAC5B,CAAC,CAAC;IACFC,cAAc,EAAElB,OAAO,CAACa,QAAQ,CAAC;MAC7BX,KAAK,EAAE;QAAA,IAAC;UAAEQ,EAAE;UAAE,GAAGI;QAAK,CAAC;QAAA,OAAM;UACzBV,GAAG,EAAG,QAAOM,EAAG,EAAC;UACjBK,MAAM,EAAE,KAAK;UACbC,IAAI,EAAEF;QACV,CAAC;MAAA,CAAC;MACFG,eAAe,EAAE,CAAC,MAAM;IAC5B,CAAC,CAAC;IACFE,cAAc,EAAEnB,OAAO,CAACa,QAAQ,CAAC;MAC7BX,KAAK,EAAGQ,EAAE,KAAM;QACZN,GAAG,EAAG,QAAOM,EAAG,EAAC;QACjBK,MAAM,EAAE;MACZ,CAAC,CAAC;MACFE,eAAe,EAAE,CAAC,MAAM;IAC5B,CAAC;EACL,CAAC,CAAC;EACFG,gBAAgB,EAAE;AACtB,CAAC,CAAC;AAEF,OAAO,MAAM;EACTC,sBAAsB;EACtBC,eAAe;EACfC,mBAAmB;EACnBC,yBAAyB;EACzBC;AACJ,CAAC,GAAG5B,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}