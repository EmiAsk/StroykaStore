{"ast":null,"code":"import { stroykaApi } from '../stroyka.api';\nconst injectedProducts = stroykaApi.injectEndpoints({\n  endpoints: builder => ({\n    getProduct: builder.query({\n      query: id => ({\n        url: `products/${id}/`\n      }),\n      providesTags: ['Product']\n    })\n  }),\n  overrideExisting: false\n});\nexport const {\n  useGetProductQuery\n} = injectedProducts;","map":{"version":3,"names":["stroykaApi","injectedProducts","injectEndpoints","endpoints","builder","getProduct","query","id","url","providesTags","overrideExisting","useGetProductQuery"],"sources":["C:/Users/Marginal1/Desktop/react-stroyka/client/src/redux/injected/injectedProduct.ts"],"sourcesContent":["import { ProductModel } from '../../@types/models';\r\nimport { stroykaApi } from '../stroyka.api';\r\n\r\nconst injectedProducts = stroykaApi.injectEndpoints({\r\n    endpoints: (builder) => ({\r\n        getProduct: builder.query<ProductModel, string>({\r\n            query: (id) => ({\r\n                url: `products/${id}/`,\r\n            }),\r\n            providesTags: ['Product'],\r\n        }),\r\n    }),\r\n    overrideExisting: false,\r\n})\r\n\r\nexport const { useGetProductQuery } = injectedProducts;"],"mappings":"AACA,SAASA,UAAU,QAAQ,gBAAgB;AAE3C,MAAMC,gBAAgB,GAAGD,UAAU,CAACE,eAAe,CAAC;EAChDC,SAAS,EAAGC,OAAO,KAAM;IACrBC,UAAU,EAAED,OAAO,CAACE,KAAK,CAAuB;MAC5CA,KAAK,EAAGC,EAAE,KAAM;QACZC,GAAG,EAAG,YAAWD,EAAG;MACxB,CAAC,CAAC;MACFE,YAAY,EAAE,CAAC,SAAS;IAC5B,CAAC;EACL,CAAC,CAAC;EACFC,gBAAgB,EAAE;AACtB,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEC;AAAmB,CAAC,GAAGV,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}