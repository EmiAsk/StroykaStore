{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  isOpenChengeLocate: false,\n  isOpenAuth: false,\n  isOpenBurger: false\n};\nexport const popupSlice = createSlice({\n  name: 'popupState',\n  initialState,\n  reducers: {\n    setToggleChengeLocate: (state, action) => {\n      state.isOpenChengeLocate = action.payload;\n    },\n    setToggleOpenAuth: (state, action) => {\n      state.isOpenAuth = action.payload;\n    },\n    setToggleOpenBurger: (state, action) => {\n      state.isOpenBurger = action.payload;\n    }\n  }\n});\nexport const {\n  setToggleChengeLocate,\n  setToggleOpenAuth,\n  setToggleOpenBurger\n} = popupSlice.actions;\nexport default popupSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isOpenChengeLocate","isOpenAuth","isOpenBurger","popupSlice","name","reducers","setToggleChengeLocate","state","action","payload","setToggleOpenAuth","setToggleOpenBurger","actions","reducer"],"sources":["C:/Users/Marginal1/Desktop/react-stroyka/client/src/redux/slices/popupSlice.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport type { PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface PopupState {\r\n    isOpenChengeLocate: boolean;\r\n    isOpenAuth: boolean;\r\n    isOpenBurger: boolean;\r\n}\r\n\r\nconst initialState: PopupState = {\r\n    isOpenChengeLocate: false,\r\n    isOpenAuth: false,\r\n    isOpenBurger: false\r\n}\r\n\r\nexport const popupSlice = createSlice({\r\n    name: 'popupState',\r\n    initialState,\r\n    reducers: {\r\n        setToggleChengeLocate: (state, action: PayloadAction<boolean>) => {\r\n            state.isOpenChengeLocate = action.payload\r\n        },\r\n        setToggleOpenAuth: (state, action: PayloadAction<boolean>) => {\r\n            state.isOpenAuth = action.payload\r\n        },\r\n        setToggleOpenBurger: (state, action: PayloadAction<boolean>) => {\r\n            state.isOpenBurger = action.payload\r\n        },\r\n    },\r\n})\r\n\r\n\r\nexport const { setToggleChengeLocate, setToggleOpenAuth, setToggleOpenBurger } = popupSlice.actions;\r\n\r\nexport default popupSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAS9C,MAAMC,YAAwB,GAAG;EAC7BC,kBAAkB,EAAE,KAAK;EACzBC,UAAU,EAAE,KAAK;EACjBC,YAAY,EAAE;AAClB,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGL,WAAW,CAAC;EAClCM,IAAI,EAAE,YAAY;EAClBL,YAAY;EACZM,QAAQ,EAAE;IACNC,qBAAqB,EAAE,CAACC,KAAK,EAAEC,MAA8B,KAAK;MAC9DD,KAAK,CAACP,kBAAkB,GAAGQ,MAAM,CAACC,OAAO;IAC7C,CAAC;IACDC,iBAAiB,EAAE,CAACH,KAAK,EAAEC,MAA8B,KAAK;MAC1DD,KAAK,CAACN,UAAU,GAAGO,MAAM,CAACC,OAAO;IACrC,CAAC;IACDE,mBAAmB,EAAE,CAACJ,KAAK,EAAEC,MAA8B,KAAK;MAC5DD,KAAK,CAACL,YAAY,GAAGM,MAAM,CAACC,OAAO;IACvC;EACJ;AACJ,CAAC,CAAC;AAGF,OAAO,MAAM;EAAEH,qBAAqB;EAAEI,iBAAiB;EAAEC;AAAoB,CAAC,GAAGR,UAAU,CAACS,OAAO;AAEnG,eAAeT,UAAU,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}