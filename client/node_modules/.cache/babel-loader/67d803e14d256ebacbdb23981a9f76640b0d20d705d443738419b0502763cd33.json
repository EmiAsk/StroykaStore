{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marginal1\\\\Desktop\\\\react-stroyka\\\\client\\\\src\\\\components\\\\LoginModal\\\\LoginModal.tsx\",\n  _s = $RefreshSig$();\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { setToggleOpenAuth } from '../../redux/slices/popupSlice';\nimport { useAppDispatch } from '../../redux/store';\nimport style from './LoginModal.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginModal = () => {\n  _s();\n  var _errors$email, _errors$password;\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: 'onChange'\n  });\n  const dispatch = useAppDispatch();\n  const closeModal = () => {\n    dispatch(setToggleOpenAuth(false));\n  };\n  const onSubmit = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style['login'],\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: style['login__title'],\n      children: \"\\u0412\\u0445\\u043E\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: style['login-form'],\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: style['login__item'],\n        children: [\"E-mail\", /*#__PURE__*/_jsxDEV(\"input\", {\n          ...register('email', {\n            required: 'Поле обязательно к заполнению ',\n            minLength: {\n              value: 9,\n              message: 'Минимум 9 символов'\n            },\n            pattern: {\n              value: /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/iu,\n              message: 'Попробуйте ввести почту еще раз'\n            }\n          }),\n          className: style['login-input'],\n          name: 'email'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), (errors === null || errors === void 0 ? void 0 : errors.email) && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: style['login__item'],\n        children: [\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\", /*#__PURE__*/_jsxDEV(\"input\", {\n          ...register('password', {\n            required: 'Поле обязательно к заполнению',\n            minLength: {\n              value: 9,\n              message: 'Пароль должен состоять минимум из 9 символов'\n            },\n            pattern: {\n              value: /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\n              message: 'Пароль должен содержать строчные, прописные латинские буквы, цифры и спецсимволы'\n            }\n          }),\n          className: style['login-input'],\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), (errors === null || errors === void 0 ? void 0 : errors.password) && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors === null || errors === void 0 ? void 0 : (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: style['login-submit'],\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: '/reg',\n        className: style['login-link'],\n        onClick: closeModal,\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0443\\u0447\\u0435\\u0442\\u043D\\u0443\\u044E \\u0437\\u0430\\u043F\\u0438\\u0441\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginModal, \"UeSN5oUquK+YF4WFZPujlDXTDIA=\", false, function () {\n  return [useForm, useAppDispatch];\n});\n_c = LoginModal;\nexport default LoginModal;\nvar _c;\n$RefreshReg$(_c, \"LoginModal\");","map":{"version":3,"names":["useForm","Link","setToggleOpenAuth","useAppDispatch","style","LoginModal","register","handleSubmit","reset","formState","errors","mode","dispatch","closeModal","onSubmit","required","minLength","value","message","pattern","email","password"],"sources":["C:/Users/Marginal1/Desktop/react-stroyka/client/src/components/LoginModal/LoginModal.tsx"],"sourcesContent":["import { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { setToggleOpenAuth } from '../../redux/slices/popupSlice';\r\nimport { useAppDispatch } from '../../redux/store';\r\nimport style from './LoginModal.module.scss';\r\n\r\ntype TLoginInputs = {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\nconst LoginModal: FC = () => {\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n        formState: {\r\n            errors\r\n        }\r\n    } = useForm<TLoginInputs>({\r\n        mode: 'onChange'\r\n    });\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    const closeModal = () => {\r\n        dispatch(setToggleOpenAuth(false))\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className={style['login']}>\r\n            <h1 className={style['login__title']}>Вход</h1>\r\n            <form className={style['login-form']} onSubmit={handleSubmit(onSubmit)}>\r\n                <label className={style['login__item']}>\r\n                    E-mail\r\n                    <input\r\n                        {...register('email', {\r\n                            required: 'Поле обязательно к заполнению ',\r\n                            minLength: {\r\n                                value: 9,\r\n                                message: 'Минимум 9 символов'\r\n                            },\r\n                            pattern: {\r\n                                value: /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/iu,\r\n                                message: 'Попробуйте ввести почту еще раз'\r\n                            }\r\n                        })}\r\n                        className={style['login-input']}\r\n                        name={'email'} />\r\n                    {errors?.email && <p>{errors?.email?.message}</p>}\r\n                </label>\r\n                <label className={style['login__item']}>\r\n                    Пароль\r\n                    <input\r\n                        {...register('password', {\r\n                            required: 'Поле обязательно к заполнению',\r\n                            minLength: {\r\n                                value: 9,\r\n                                message: 'Пароль должен состоять минимум из 9 символов'\r\n                            },\r\n                            pattern: {\r\n                                value: /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\r\n                                message: 'Пароль должен содержать строчные, прописные латинские буквы, цифры и спецсимволы'\r\n                            }\r\n                        })}\r\n                        className={style['login-input']}\r\n                        type='password' />\r\n                    {errors?.password && <p>{errors?.password?.message}</p>}\r\n                </label>\r\n                <button type='submit' className={style['login-submit']}>Войти</button>\r\n                <Link\r\n                    to={'/reg'}\r\n                    className={style['login-link']}\r\n                    onClick={closeModal}>Создать учетную запись</Link>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginModal;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}