{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useSelector } from 'react-redux';\nimport { setSortType } from '../redux/slices/sortSlice';\nimport { useAppDispatch } from '../redux/store';\nexport const useSort = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const sortState = useSelector(state => state.popupSlice.isOpenChengeLocate);\n\n  // const [sortState, setSortState] = useState([\n  //     {\n  //         value: true,\n  //         label: 'Популярные',\n  //         title: 'popular'\n  //     },\n  //     {\n  //         value: false,\n  //         label: 'Дешевле',\n  //         title: 'cheaper'\n  //     },\n  //     {\n  //         value: false,\n  //         label: 'Дороже',\n  //         title: 'expensive'\n  //     },\n  //     {\n  //         value: false,\n  //         label: 'По алфавиту',\n  //         title: 'alphabetically'\n  //     },\n  // ]);\n\n  const onClickSortItem = obj => {\n    dispatch(setSortType(obj));\n  };\n  const getSortParam = () => {\n    return sortState.find(obj => obj.value).title;\n  };\n  return {\n    sortState,\n    onClickSortItem,\n    getSortParam\n  };\n};\n_s(useSort, \"iR/2yduz1qMEHzR3pPbqhxYTCQQ=\", false, function () {\n  return [useAppDispatch, useSelector];\n});","map":{"version":3,"names":["useSelector","setSortType","useAppDispatch","useSort","dispatch","sortState","state","popupSlice","isOpenChengeLocate","onClickSortItem","obj","getSortParam","find","value","title"],"sources":["C:/Users/Marginal1/Desktop/react-stroyka/client/src/hooks/useSort.ts"],"sourcesContent":["import { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { SortTypeModel } from '../@types/models';\r\nimport { setSortType } from '../redux/slices/sortSlice';\r\nimport { useAppDispatch } from '../redux/store';\r\n\r\nexport const useSort = () => {\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    const sortState = useSelector((state: RootState) => state.popupSlice.isOpenChengeLocate);\r\n\r\n    // const [sortState, setSortState] = useState([\r\n    //     {\r\n    //         value: true,\r\n    //         label: 'Популярные',\r\n    //         title: 'popular'\r\n    //     },\r\n    //     {\r\n    //         value: false,\r\n    //         label: 'Дешевле',\r\n    //         title: 'cheaper'\r\n    //     },\r\n    //     {\r\n    //         value: false,\r\n    //         label: 'Дороже',\r\n    //         title: 'expensive'\r\n    //     },\r\n    //     {\r\n    //         value: false,\r\n    //         label: 'По алфавиту',\r\n    //         title: 'alphabetically'\r\n    //     },\r\n    // ]);\r\n\r\n    const onClickSortItem = (obj: SortTypeModel) => {\r\n        dispatch(setSortType(obj))\r\n    }\r\n\r\n    const getSortParam = () => {\r\n        return sortState.find((obj) => obj.value)!.title\r\n    }\r\n\r\n    return { sortState, onClickSortItem, getSortParam }\r\n}"],"mappings":";AACA,SAASA,WAAW,QAAQ,aAAa;AAEzC,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASC,cAAc,QAAQ,gBAAgB;AAE/C,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;EAEzB,MAAMC,QAAQ,GAAGF,cAAc,EAAE;EAEjC,MAAMG,SAAS,GAAGL,WAAW,CAAEM,KAAgB,IAAKA,KAAK,CAACC,UAAU,CAACC,kBAAkB,CAAC;;EAExF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,eAAe,GAAIC,GAAkB,IAAK;IAC5CN,QAAQ,CAACH,WAAW,CAACS,GAAG,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAM;IACvB,OAAON,SAAS,CAACO,IAAI,CAAEF,GAAG,IAAKA,GAAG,CAACG,KAAK,CAAC,CAAEC,KAAK;EACpD,CAAC;EAED,OAAO;IAAET,SAAS;IAAEI,eAAe;IAAEE;EAAa,CAAC;AACvD,CAAC;AAAA,GAtCYR,OAAO;EAAA,QAECD,cAAc,EAEbF,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}