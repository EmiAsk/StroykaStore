{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marginal1\\\\Desktop\\\\react-stroyka\\\\client\\\\src\\\\components\\\\Reviews\\\\Reviews.tsx\",\n  _s = $RefreshSig$();\nimport { memo, useEffect, useState } from 'react';\nimport { useErrorHandler } from '../../hooks/useErrorHandler';\nimport ErrorSection from '../ErrorSection/ErrorSection';\nimport ReviewsSlide from '../ReviewsSlide/ReviewsSlide';\nimport ReviewSkeleton from '../Skeletons/ReviewSkeleton';\nimport { useGetReviewsQuery } from '../../redux/injected/injectedReviews';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport style from './Reviews.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reviews = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(() => {\n  _s();\n  const [slideCount, setSlideCount] = useState(3);\n  useEffect(() => {\n    if (window.innerWidth <= 400) {\n      setSlideCount(1);\n    } else if (window.innerWidth <= 750) {\n      setSlideCount(2);\n    }\n  }, []);\n  const {\n    data = [],\n    isLoading,\n    isFetching,\n    isError,\n    error\n  } = useGetReviewsQuery();\n  const errorData = useErrorHandler({\n    error,\n    isError\n  });\n  const renderSkeleton = [...new Array(slideCount * 2)].map((_, index) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n    children: /*#__PURE__*/_jsxDEV(ReviewSkeleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 102\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 77\n  }, this));\n  const renderReview = data.map((obj, i) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n    className: style['reviews-slide'],\n    children: /*#__PURE__*/_jsxDEV(ReviewsSlide, {\n      ...obj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 103\n    }, this)\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 47\n  }, this));\n  const errorObj = {\n    errorCode: errorData.status,\n    errorMessage: 'Произошла ошибка при получении отзывов попробуйте обновить страницу или зайдите позже'\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"mb80\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: style['reviews-title'],\n        children: \"\\u041E\\u0442\\u0437\\u044B\\u0432\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), isError ? /*#__PURE__*/_jsxDEV(ErrorSection, {\n        ...errorObj\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(Swiper, {\n        className: style['reviews-slider'],\n        spaceBetween: 20,\n        loop: true,\n        slidesPerView: slideCount,\n        children: isFetching || isLoading ? renderSkeleton : renderReview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 64\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}, \"7A8KoPp2Dg473EdA0Jm1XfEsqQE=\", false, function () {\n  return [useGetReviewsQuery, useErrorHandler];\n})), \"7A8KoPp2Dg473EdA0Jm1XfEsqQE=\", false, function () {\n  return [useGetReviewsQuery, useErrorHandler];\n});\n_c2 = Reviews;\nexport default Reviews;\nvar _c, _c2;\n$RefreshReg$(_c, \"Reviews$memo\");\n$RefreshReg$(_c2, \"Reviews\");","map":{"version":3,"names":["memo","useEffect","useState","useErrorHandler","ErrorSection","ReviewsSlide","ReviewSkeleton","useGetReviewsQuery","Swiper","SwiperSlide","style","Reviews","slideCount","setSlideCount","window","innerWidth","data","isLoading","isFetching","isError","error","errorData","renderSkeleton","Array","map","_","index","renderReview","obj","i","errorObj","errorCode","status","errorMessage"],"sources":["C:/Users/Marginal1/Desktop/react-stroyka/client/src/components/Reviews/Reviews.tsx"],"sourcesContent":["import { FC, memo, useEffect, useState } from 'react';\r\nimport { useErrorHandler } from '../../hooks/useErrorHandler';\r\nimport ErrorSection from '../ErrorSection/ErrorSection';\r\nimport ReviewsSlide from '../ReviewsSlide/ReviewsSlide';\r\nimport ReviewSkeleton from '../Skeletons/ReviewSkeleton';\r\nimport { useGetReviewsQuery } from '../../redux/injected/injectedReviews';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport style from './Reviews.module.scss';\r\n\r\nconst Reviews: FC = memo(() => {\r\n\r\n    const [slideCount, setSlideCount] = useState(3);\r\n\r\n    useEffect(() => {\r\n        if (window.innerWidth <= 400) {\r\n            setSlideCount(1)\r\n        } else if (window.innerWidth <= 750) {\r\n            setSlideCount(2)\r\n        }\r\n    }, [])\r\n\r\n    const { data = [], isLoading, isFetching, isError, error } = useGetReviewsQuery();\r\n\r\n    const errorData = useErrorHandler({ error, isError });\r\n\r\n    const renderSkeleton = [...new Array(slideCount * 2)].map((_, index) => <SwiperSlide key={index}><ReviewSkeleton /></SwiperSlide>);\r\n    const renderReview = data.map((obj, i) => <SwiperSlide className={style['reviews-slide']} key={i}><ReviewsSlide {...obj} /></SwiperSlide>);\r\n\r\n    const errorObj = { \r\n        errorCode: errorData.status,\r\n        errorMessage: 'Произошла ошибка при получении отзывов попробуйте обновить страницу или зайдите позже'\r\n    }\r\n\r\n    return (\r\n        <section className='mb80'>\r\n            <div className='container'>\r\n                <h2 className={style['reviews-title']}>\r\n                    Отзывы\r\n                </h2>\r\n                {\r\n                    isError ? <ErrorSection {...errorObj} /> : <Swiper\r\n                        className={style['reviews-slider']}\r\n                        spaceBetween={20}\r\n                        loop={true}\r\n                        slidesPerView={slideCount}>\r\n                        {(isFetching || isLoading) ? renderSkeleton : renderReview}\r\n                    </Swiper>\r\n                }\r\n            </div>\r\n        </section>\r\n    );\r\n})\r\n\r\nexport default Reviews;"],"mappings":";;AAAA,SAAaA,IAAI,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACrD,SAASC,eAAe,QAAQ,6BAA6B;AAC7D,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,SAASC,kBAAkB,QAAQ,sCAAsC;AACzE,SAASC,MAAM,EAAEC,WAAW,QAAQ,cAAc;AAClD,OAAOC,KAAK,MAAM,uBAAuB;AAAC;AAE1C,MAAMC,OAAW,iCAAGX,IAAI,SAAC,MAAM;EAAA;EAE3B,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACZ,IAAIa,MAAM,CAACC,UAAU,IAAI,GAAG,EAAE;MAC1BF,aAAa,CAAC,CAAC,CAAC;IACpB,CAAC,MAAM,IAAIC,MAAM,CAACC,UAAU,IAAI,GAAG,EAAE;MACjCF,aAAa,CAAC,CAAC,CAAC;IACpB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM;IAAEG,IAAI,GAAG,EAAE;IAAEC,SAAS;IAAEC,UAAU;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGb,kBAAkB,EAAE;EAEjF,MAAMc,SAAS,GAAGlB,eAAe,CAAC;IAAEiB,KAAK;IAAED;EAAQ,CAAC,CAAC;EAErD,MAAMG,cAAc,GAAG,CAAC,GAAG,IAAIC,KAAK,CAACX,UAAU,GAAG,CAAC,CAAC,CAAC,CAACY,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBAAK,QAAC,WAAW;IAAA,uBAAa,QAAC,cAAc;MAAA;MAAA;MAAA;IAAA;EAAG,GAAzBA,KAAK;IAAA;IAAA;IAAA;EAAA,QAAkC,CAAC;EAClI,MAAMC,YAAY,GAAGX,IAAI,CAACQ,GAAG,CAAC,CAACI,GAAG,EAAEC,CAAC,kBAAK,QAAC,WAAW;IAAC,SAAS,EAAEnB,KAAK,CAAC,eAAe,CAAE;IAAA,uBAAS,QAAC,YAAY;MAAA,GAAKkB;IAAG;MAAA;MAAA;MAAA;IAAA;EAAI,GAA5BC,CAAC;IAAA;IAAA;IAAA;EAAA,QAAyC,CAAC;EAE1I,MAAMC,QAAQ,GAAG;IACbC,SAAS,EAAEV,SAAS,CAACW,MAAM;IAC3BC,YAAY,EAAE;EAClB,CAAC;EAED,oBACI;IAAS,SAAS,EAAC,MAAM;IAAA,uBACrB;MAAK,SAAS,EAAC,WAAW;MAAA,wBACtB;QAAI,SAAS,EAAEvB,KAAK,CAAC,eAAe,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEjC,EAEDS,OAAO,gBAAG,QAAC,YAAY;QAAA,GAAKW;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAI,gBAAG,QAAC,MAAM;QAC9C,SAAS,EAAEpB,KAAK,CAAC,gBAAgB,CAAE;QACnC,YAAY,EAAE,EAAG;QACjB,IAAI,EAAE,IAAK;QACX,aAAa,EAAEE,UAAW;QAAA,UACxBM,UAAU,IAAID,SAAS,GAAIK,cAAc,GAAGK;MAAY;QAAA;QAAA;QAAA;MAAA,QACrD;IAAA;MAAA;MAAA;MAAA;IAAA;EAEX;IAAA;IAAA;IAAA;EAAA,QACA;AAElB,CAAC;EAAA,QA9BgEpB,kBAAkB,EAE7DJ,eAAe;AAAA,GA4BnC;EAAA,QA9B+DI,kBAAkB,EAE7DJ,eAAe;AAAA,EA4BnC;AAAA,MA1CIQ,OAAW;AA4CjB,eAAeA,OAAO;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}