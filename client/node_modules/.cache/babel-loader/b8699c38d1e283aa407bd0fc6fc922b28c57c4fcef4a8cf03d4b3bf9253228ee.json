{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useLayoutEffect, useEffect } from 'react';\nimport { setError } from '../redux/slices/errorSlice';\nimport { useAppDispatch } from '../redux/store';\nimport { setToggleOpenAuth } from '../redux/slices/popupSlice';\nexport const useErrorHandler = _ref => {\n  _s();\n  let {\n    error,\n    isError,\n    isClient = false,\n    errorMessage\n  } = _ref;\n  const dispatch = useAppDispatch();\n  const [errorData, setErrorData] = useState({\n    status: 100,\n    data: 'status'\n  });\n  useLayoutEffect(() => {\n    if (error) {\n      if ('status' in error) {\n        setErrorData(error);\n        if (error.status === 401) {\n          dispatch(setToggleOpenAuth(true));\n        }\n      }\n    }\n  }, [error, isError]);\n  useEffect(() => {\n    if (isClient && isError && errorMessage) {\n      dispatch(setError({\n        errorCode: errorData.status,\n        errorMessage: errorMessage,\n        isError: true\n      }));\n    }\n  }, [error, isError, errorData, isClient, errorMessage, dispatch]);\n  return errorData;\n};\n_s(useErrorHandler, \"w9NlSBkwiqIpRM79V5u43hSzugE=\", false, function () {\n  return [useAppDispatch];\n});","map":{"version":3,"names":["useState","useLayoutEffect","useEffect","setError","useAppDispatch","setToggleOpenAuth","useErrorHandler","error","isError","isClient","errorMessage","dispatch","errorData","setErrorData","status","data","errorCode"],"sources":["C:/Users/Marginal1/Desktop/react-stroyka/client/src/hooks/useErrorHandler.ts"],"sourcesContent":["import { SerializedError } from '@reduxjs/toolkit';\r\nimport { FetchBaseQueryError } from '@reduxjs/toolkit/dist/query';\r\nimport { useState, useLayoutEffect, useEffect } from 'react';\r\nimport { setError } from '../redux/slices/errorSlice';\r\nimport { useAppDispatch } from '../redux/store';\r\nimport { setToggleOpenAuth } from '../redux/slices/popupSlice';\r\n\r\ntype ErrorHandlerProps = {\r\n    error: FetchBaseQueryError | SerializedError | undefined;\r\n    isError: boolean;\r\n    isClient?: boolean;\r\n    errorMessage?: string;\r\n}\r\n\r\nexport const useErrorHandler = ({ error, isError, isClient = false, errorMessage }: ErrorHandlerProps) => {\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    const [errorData, setErrorData] = useState<FetchBaseQueryError>({\r\n        status: 100,\r\n        data: 'status'\r\n    })\r\n    useLayoutEffect(() => {\r\n        if (error) {\r\n            if ('status' in error) {\r\n                setErrorData(error)\r\n                if(error.status === 401){\r\n                    dispatch(setToggleOpenAuth(true))\r\n                }\r\n            }\r\n        }\r\n\r\n    }, [error, isError])\r\n\r\n    useEffect(() => {\r\n        if (isClient && isError && errorMessage) {\r\n            dispatch(setError({\r\n                errorCode: errorData.status,\r\n                errorMessage: errorMessage,\r\n                isError: true\r\n            }))\r\n        }\r\n    }, [error, isError, errorData, isClient, errorMessage, dispatch])\r\n\r\n    return errorData;\r\n}"],"mappings":";AAEA,SAASA,QAAQ,EAAEC,eAAe,EAAEC,SAAS,QAAQ,OAAO;AAC5D,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,SAASC,iBAAiB,QAAQ,4BAA4B;AAS9D,OAAO,MAAMC,eAAe,GAAG,QAA2E;EAAA;EAAA,IAA1E;IAAEC,KAAK;IAAEC,OAAO;IAAEC,QAAQ,GAAG,KAAK;IAAEC;EAAgC,CAAC;EAEjG,MAAMC,QAAQ,GAAGP,cAAc,EAAE;EAEjC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAsB;IAC5Dc,MAAM,EAAE,GAAG;IACXC,IAAI,EAAE;EACV,CAAC,CAAC;EACFd,eAAe,CAAC,MAAM;IAClB,IAAIM,KAAK,EAAE;MACP,IAAI,QAAQ,IAAIA,KAAK,EAAE;QACnBM,YAAY,CAACN,KAAK,CAAC;QACnB,IAAGA,KAAK,CAACO,MAAM,KAAK,GAAG,EAAC;UACpBH,QAAQ,CAACN,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACrC;MACJ;IACJ;EAEJ,CAAC,EAAE,CAACE,KAAK,EAAEC,OAAO,CAAC,CAAC;EAEpBN,SAAS,CAAC,MAAM;IACZ,IAAIO,QAAQ,IAAID,OAAO,IAAIE,YAAY,EAAE;MACrCC,QAAQ,CAACR,QAAQ,CAAC;QACda,SAAS,EAAEJ,SAAS,CAACE,MAAM;QAC3BJ,YAAY,EAAEA,YAAY;QAC1BF,OAAO,EAAE;MACb,CAAC,CAAC,CAAC;IACP;EACJ,CAAC,EAAE,CAACD,KAAK,EAAEC,OAAO,EAAEI,SAAS,EAAEH,QAAQ,EAAEC,YAAY,EAAEC,QAAQ,CAAC,CAAC;EAEjE,OAAOC,SAAS;AACpB,CAAC;AAAA,GA/BYN,eAAe;EAAA,QAEPF,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}