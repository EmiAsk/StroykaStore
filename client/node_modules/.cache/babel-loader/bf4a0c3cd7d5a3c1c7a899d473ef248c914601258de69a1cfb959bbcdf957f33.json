{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marginal1\\\\Desktop\\\\react-stroyka\\\\client\\\\src\\\\components\\\\Burger\\\\Burger.tsx\",\n  _s = $RefreshSig$();\nimport { memo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useControlPopup } from '../../hooks/useControlPopup';\nimport { setToggleOpenBurger } from '../../redux/slices/popupSlice';\nimport { useAppDispatch } from '../../redux/store';\nimport clsx from 'clsx';\nimport style from './Burger.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Burger = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(() => {\n  _s();\n  const dispatch = useAppDispatch();\n  const isOpenBurger = useSelector(state => state.popupSlice.isOpenBurger);\n  useControlPopup(isOpenBurger, setToggleOpenBurger);\n  const onClickBurger = () => {\n    dispatch(setToggleOpenBurger(!isOpenBurger));\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: clsx(style['burger'], {\n      [style['burger--active']]: isOpenBurger\n    }),\n    onClick: onClickBurger,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}, \"xIPrkNBmipDsWAPThPmUMjxHIv8=\", false, function () {\n  return [useAppDispatch, useSelector, useControlPopup];\n})), \"xIPrkNBmipDsWAPThPmUMjxHIv8=\", false, function () {\n  return [useAppDispatch, useSelector, useControlPopup];\n});\n_c2 = Burger;\nexport default Burger;\nvar _c, _c2;\n$RefreshReg$(_c, \"Burger$memo\");\n$RefreshReg$(_c2, \"Burger\");","map":{"version":3,"names":["memo","useSelector","useControlPopup","setToggleOpenBurger","useAppDispatch","clsx","style","Burger","dispatch","isOpenBurger","state","popupSlice","onClickBurger"],"sources":["C:/Users/Marginal1/Desktop/react-stroyka/client/src/components/Burger/Burger.tsx"],"sourcesContent":["import { FC, memo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useControlPopup } from '../../hooks/useControlPopup';\r\nimport { setToggleOpenBurger } from '../../redux/slices/popupSlice';\r\nimport { RootState, useAppDispatch } from '../../redux/store';\r\nimport clsx from 'clsx';\r\nimport style from './Burger.module.scss';\r\n\r\nconst Burger: FC = memo(() => {\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    const isOpenBurger = useSelector((state: RootState) => state.popupSlice.isOpenBurger);\r\n\r\n    useControlPopup(isOpenBurger, setToggleOpenBurger);\r\n\r\n    const onClickBurger = () => {\r\n        dispatch(setToggleOpenBurger(!isOpenBurger))\r\n    }\r\n\r\n    return (\r\n        <button className={clsx(style['burger'], {\r\n            [style['burger--active']]: isOpenBurger\r\n        })} onClick={onClickBurger}>\r\n            <span></span>\r\n        </button>\r\n    );\r\n})\r\n\r\nexport default Burger;"],"mappings":";;AAAA,SAAaA,IAAI,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,eAAe,QAAQ,6BAA6B;AAC7D,SAASC,mBAAmB,QAAQ,+BAA+B;AACnE,SAAoBC,cAAc,QAAQ,mBAAmB;AAC7D,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,sBAAsB;AAAC;AAEzC,MAAMC,MAAU,iCAAGP,IAAI,SAAC,MAAM;EAAA;EAE1B,MAAMQ,QAAQ,GAAGJ,cAAc,EAAE;EAEjC,MAAMK,YAAY,GAAGR,WAAW,CAAES,KAAgB,IAAKA,KAAK,CAACC,UAAU,CAACF,YAAY,CAAC;EAErFP,eAAe,CAACO,YAAY,EAAEN,mBAAmB,CAAC;EAElD,MAAMS,aAAa,GAAG,MAAM;IACxBJ,QAAQ,CAACL,mBAAmB,CAAC,CAACM,YAAY,CAAC,CAAC;EAChD,CAAC;EAED,oBACI;IAAQ,SAAS,EAAEJ,IAAI,CAACC,KAAK,CAAC,QAAQ,CAAC,EAAE;MACrC,CAACA,KAAK,CAAC,gBAAgB,CAAC,GAAGG;IAC/B,CAAC,CAAE;IAAC,OAAO,EAAEG,aAAc;IAAA,uBACvB;MAAA;MAAA;MAAA;IAAA;EAAa;IAAA;IAAA;IAAA;EAAA,QACR;AAEjB,CAAC;EAAA,QAjBoBR,cAAc,EAEVH,WAAW,EAEhCC,eAAe;AAAA,GAajB;EAAA,QAjBmBE,cAAc,EAEVH,WAAW,EAEhCC,eAAe;AAAA,EAajB;AAAA,MAnBIK,MAAU;AAqBhB,eAAeA,MAAM;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}