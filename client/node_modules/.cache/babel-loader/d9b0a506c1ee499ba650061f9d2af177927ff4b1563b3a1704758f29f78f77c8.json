{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marginal1\\\\Desktop\\\\react-stroyka\\\\client\\\\src\\\\components\\\\Popup\\\\Popup.tsx\",\n  _s = $RefreshSig$();\nimport { useControlPopup } from '../../hooks/useControlPopup';\nimport Portal from '../Portal/Portal';\nimport style from './Popup.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Popup = _ref => {\n  _s();\n  let {\n    children,\n    close,\n    isOpen\n  } = _ref;\n  const {\n    closeModal\n  } = useControlPopup(isOpen, close);\n  if (!isOpen) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(Portal, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style['popup'],\n      role: \"dialog\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style['overlay'],\n        role: \"button\",\n        onClick: closeModal,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          className: style['close-btn']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style['content'],\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Popup, \"ktotdhDDS71kpZzeUOBcj06z0NM=\", false, function () {\n  return [useControlPopup];\n});\n_c = Popup;\nexport default Popup;\nvar _c;\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"names":["useControlPopup","Portal","style","Popup","children","close","isOpen","closeModal"],"sources":["C:/Users/Marginal1/Desktop/react-stroyka/client/src/components/Popup/Popup.tsx"],"sourcesContent":["import { FC, ReactNode } from 'react';\r\nimport { useControlPopup } from '../../hooks/useControlPopup';\r\nimport Portal from '../Portal/Portal';\r\nimport { ActionCreatorWithPayload } from '@reduxjs/toolkit';\r\nimport style from './Popup.module.scss';\r\n\r\ntype TPopup = {\r\n    children: ReactNode;\r\n    close: ActionCreatorWithPayload<boolean, string>;\r\n    isOpen: boolean;\r\n}\r\n\r\nconst Popup: FC<TPopup> = ({ children, close, isOpen }) => {\r\n\r\n    const { closeModal } = useControlPopup(isOpen, close);\r\n\r\n    if (!isOpen) {\r\n        return null\r\n    } \r\n\r\n    return (\r\n        <Portal>\r\n            <div className={style['popup']} role='dialog'>\r\n                <div\r\n                    className={style['overlay']}\r\n                    role='button'\r\n                    onClick={closeModal}>\r\n                    <button onClick={closeModal} className={style['close-btn']}></button>\r\n                </div>\r\n                <div className={style['content']}>{children}</div>\r\n            </div>\r\n        </Portal >\r\n    );\r\n}\r\n\r\nexport default Popup;"],"mappings":";;AACA,SAASA,eAAe,QAAQ,6BAA6B;AAC7D,OAAOC,MAAM,MAAM,kBAAkB;AAErC,OAAOC,KAAK,MAAM,qBAAqB;AAAC;AAQxC,MAAMC,KAAiB,GAAG,QAAiC;EAAA;EAAA,IAAhC;IAAEC,QAAQ;IAAEC,KAAK;IAAEC;EAAO,CAAC;EAElD,MAAM;IAAEC;EAAW,CAAC,GAAGP,eAAe,CAACM,MAAM,EAAED,KAAK,CAAC;EAErD,IAAI,CAACC,MAAM,EAAE;IACT,OAAO,IAAI;EACf;EAEA,oBACI,QAAC,MAAM;IAAA,uBACH;MAAK,SAAS,EAAEJ,KAAK,CAAC,OAAO,CAAE;MAAC,IAAI,EAAC,QAAQ;MAAA,wBACzC;QACI,SAAS,EAAEA,KAAK,CAAC,SAAS,CAAE;QAC5B,IAAI,EAAC,QAAQ;QACb,OAAO,EAAEK,UAAW;QAAA,uBACpB;UAAQ,OAAO,EAAEA,UAAW;UAAC,SAAS,EAAEL,KAAK,CAAC,WAAW;QAAE;UAAA;UAAA;UAAA;QAAA;MAAU;QAAA;QAAA;QAAA;MAAA,QACnE,eACN;QAAK,SAAS,EAAEA,KAAK,CAAC,SAAS,CAAE;QAAA,UAAEE;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA;EAChD;IAAA;IAAA;IAAA;EAAA,QACA;AAElB,CAAC;AAAA,GArBKD,KAAiB;EAAA,QAEIH,eAAe;AAAA;AAAA,KAFpCG,KAAiB;AAuBvB,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}