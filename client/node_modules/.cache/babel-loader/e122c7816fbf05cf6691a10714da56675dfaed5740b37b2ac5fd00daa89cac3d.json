{"ast":null,"code":"import { stroykaApi } from '../stroyka.api';\nconst injectedRegistration = stroykaApi.injectEndpoints({\n  endpoints: builder => ({\n    login: builder.mutation({\n      query: data => ({\n        url: `/auth/login`,\n        method: 'POST',\n        body: data\n      })\n    })\n  }),\n  overrideExisting: false\n});\nexport const {\n  useLoginMutation\n} = injectedRegistration;","map":{"version":3,"names":["stroykaApi","injectedRegistration","injectEndpoints","endpoints","builder","login","mutation","query","data","url","method","body","overrideExisting","useLoginMutation"],"sources":["C:/Users/Marginal1/Desktop/react-stroyka/client/src/redux/injected/injectedLogin.ts"],"sourcesContent":["import { stroykaApi } from '../stroyka.api';\r\n\r\ntype LoginDataType = {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\n\r\ntype ResponseDataType = {\r\n    \r\n    data: {\r\n        token: string\r\n    }\r\n}\r\n\r\nconst injectedRegistration = stroykaApi.injectEndpoints({\r\n    endpoints: (builder) => ({\r\n        login: builder.mutation<ResponseDataType, LoginDataType>({\r\n            query: (data) => ({\r\n                url: `/auth/login`,\r\n                method: 'POST',\r\n                body: data,\r\n            }),\r\n        }),\r\n    }),\r\n    overrideExisting: false,\r\n})\r\n\r\nexport const { useLoginMutation } = injectedRegistration;"],"mappings":"AAAA,SAASA,UAAU,QAAQ,gBAAgB;AAe3C,MAAMC,oBAAoB,GAAGD,UAAU,CAACE,eAAe,CAAC;EACpDC,SAAS,EAAGC,OAAO,KAAM;IACrBC,KAAK,EAAED,OAAO,CAACE,QAAQ,CAAkC;MACrDC,KAAK,EAAGC,IAAI,KAAM;QACdC,GAAG,EAAG,aAAY;QAClBC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACV,CAAC;IACL,CAAC;EACL,CAAC,CAAC;EACFI,gBAAgB,EAAE;AACtB,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEC;AAAiB,CAAC,GAAGZ,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}