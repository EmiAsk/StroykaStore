{"ast":null,"code":"import { stroykaApi } from '../stroyka.api';\nconst injectedPopularProducts = stroykaApi.injectEndpoints({\n  endpoints: builder => ({\n    getPopularProducts: builder.query({\n      query: count => ({\n        url: 'products/',\n        params: {\n          count: count,\n          sort_by: '/price'\n          // order: 'desc',\n          // p: 1,\n        }\n      }),\n\n      providesTags: result => result ? [...result.map(_ref => {\n        let {\n          id\n        } = _ref;\n        return {\n          type: 'PopularProducts',\n          id\n        };\n      }), 'PopularProducts'] : ['PopularProducts']\n    })\n  }),\n  overrideExisting: false\n});\nexport const {\n  useGetPopularProductsQuery\n} = injectedPopularProducts;","map":{"version":3,"names":["stroykaApi","injectedPopularProducts","injectEndpoints","endpoints","builder","getPopularProducts","query","count","url","params","sort_by","providesTags","result","map","id","type","overrideExisting","useGetPopularProductsQuery"],"sources":["C:/Users/Marginal1/Desktop/react-stroyka/client/src/redux/injected/injectedPopularProducts.ts"],"sourcesContent":["import { stroykaApi } from '../stroyka.api';\r\nimport { ProductModel } from '../../@types/models';\r\n\r\nconst injectedPopularProducts = stroykaApi.injectEndpoints({\r\n    endpoints: (builder) => ({\r\n        getPopularProducts: builder.query<ProductModel[], number>({\r\n            query: (count) => ({\r\n                url: 'products/',\r\n                params: {\r\n                    count: count,\r\n                    sort_by: '/price',\r\n                    // order: 'desc',\r\n                    // p: 1,\r\n                }\r\n            }),\r\n            providesTags: (result) =>\r\n                result\r\n                    ? [...result.map(({ id }) => ({ type: 'PopularProducts' as const, id })), 'PopularProducts']\r\n                    : ['PopularProducts'],\r\n        }),\r\n    }),\r\n    overrideExisting: false,\r\n})\r\n\r\nexport const { useGetPopularProductsQuery } = injectedPopularProducts;"],"mappings":"AAAA,SAASA,UAAU,QAAQ,gBAAgB;AAG3C,MAAMC,uBAAuB,GAAGD,UAAU,CAACE,eAAe,CAAC;EACvDC,SAAS,EAAGC,OAAO,KAAM;IACrBC,kBAAkB,EAAED,OAAO,CAACE,KAAK,CAAyB;MACtDA,KAAK,EAAGC,KAAK,KAAM;QACfC,GAAG,EAAE,WAAW;QAChBC,MAAM,EAAE;UACJF,KAAK,EAAEA,KAAK;UACZG,OAAO,EAAE;UACT;UACA;QACJ;MACJ,CAAC,CAAC;;MACFC,YAAY,EAAGC,MAAM,IACjBA,MAAM,GACA,CAAC,GAAGA,MAAM,CAACC,GAAG,CAAC;QAAA,IAAC;UAAEC;QAAG,CAAC;QAAA,OAAM;UAAEC,IAAI,EAAE,iBAA0B;UAAED;QAAG,CAAC;MAAA,CAAC,CAAC,EAAE,iBAAiB,CAAC,GAC1F,CAAC,iBAAiB;IAChC,CAAC;EACL,CAAC,CAAC;EACFE,gBAAgB,EAAE;AACtB,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEC;AAA2B,CAAC,GAAGhB,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}